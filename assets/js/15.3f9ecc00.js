(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{423:function(s,a,t){"use strict";t.r(a);var e=t(2),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" git")]),s._v(" "),a("h2",{attrs:{id:"配置git-pull的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置git-pull的方式"}},[s._v("#")]),s._v(" 配置git pull的方式")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config pull.rebase "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config pull.rebase "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config pull.ff only       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fast-forward only")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("hr"),s._v(" "),a("h2",{attrs:{id:"merge回退之后为什么奇怪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge回退之后为什么奇怪"}},[s._v("#")]),s._v(" merge回退之后为什么奇怪")]),s._v(" "),a("p",[s._v("如果merge是fast-forword，那么git reset —hard head^回不到merge之前的状态，需要先git\nreflog查看之前在的commit，然后reset过去。反之则能回到merge之前的状态。")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"查看两个分支merge是否有冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看两个分支merge是否有冲突"}},[s._v("#")]),s._v(" 查看两个分支merge是否有冲突")]),s._v(" "),a("p",[s._v("git merge --no-commit <branch_name>"),a("br"),s._v("\n这个命令会将指定分支的更改合并到当前分支，但不会自动提交合并结果。如果有冲突，则会显示相应的提示。"),a("br"),s._v("\n如果没有冲突，则可以使用以下命令撤销合并："),a("br"),s._v("\ngit merge --abort")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"强制一个分支等于另一个分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制一个分支等于另一个分支"}},[s._v("#")]),s._v(" 强制一个分支等于另一个分支")]),s._v(" "),a("p",[s._v("git checkout <target_branch>"),a("br"),s._v("\ngit reset --hard <source_branch>"),a("br"),s._v("\ngit push -f origin <target_branch>")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"查看一个分支和上游分支的diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看一个分支和上游分支的diff"}},[s._v("#")]),s._v(" 查看一个分支和上游分支的diff")]),s._v(" "),a("h2",{attrs:{id:"git-diff-head-u"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-diff-head-u"}},[s._v("#")]),s._v(" git diff head..@{u}")]),s._v(" "),a("h2",{attrs:{id:"git恢复文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git恢复文件"}},[s._v("#")]),s._v(" git恢复文件")]),s._v(" "),a("h3",{attrs:{id:"没有add也没有commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有add也没有commit"}},[s._v("#")]),s._v(" 没有add也没有commit")]),s._v(" "),a("p",[s._v("无力回天,回收站看看")]),s._v(" "),a("h3",{attrs:{id:"add过但是没有commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add过但是没有commit"}},[s._v("#")]),s._v(" add过但是没有commit")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 找出所有没有被引用的文件,放入.git/lost-found/other文件里")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fsck")]),s._v(" --lost-found"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /.git/lost-found/other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印文件类型,找出想要的文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"已经commit过"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已经commit过"}},[s._v("#")]),s._v(" 已经commit过")]),s._v(" "),a("p",[s._v("直接git reflog查看上一次commit id,切过去即可")]),s._v(" "),a("h2",{attrs:{id:"commit表示方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit表示方法"}},[s._v("#")]),s._v(" commit表示方法")]),s._v(" "),a("p",[s._v("祖先引用")]),s._v(" "),a("ul",[a("li",[s._v("如果你在引用的尾部加上一个"),a("code",[s._v("^")]),s._v("（脱字符）， Git 会将其解析为该引用的上一个提交。可以在"),a("code",[s._v("^")]),s._v("后面添加一个数字来指明想要**哪一个\n**父提交——例如"),a("code",[s._v("d921970^2")]),s._v("代表 “d921970 的第二父提交” 这个语法只适用于合并的提交，因为合并提交会有多个父提交。\n合并提交的第一父提交是你合并时所在分支（通常为"),a("code",[s._v("master")]),s._v("），而第二父提交是你所合并的分支（例如"),a("code",[s._v("topic")]),s._v("）")]),s._v(" "),a("li",[s._v("另一种指明祖先提交的方法是"),a("code",[s._v("~")]),s._v("（波浪号）。 同样是指向第一父提交，因此"),a("code",[s._v("HEAD~")]),s._v("和"),a("code",[s._v("HEAD^")]),s._v("是等价的。\n而区别在于你在后面加数字的时候。"),a("code",[s._v("HEAD~2")]),s._v("代表“第一父提交的第一父提交”，也就是“祖父提交”——Git 会根据你指定的次数获取对应的第一父提交。")])]),s._v(" "),a("h3",{attrs:{id:"双点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双点"}},[s._v("#")]),s._v(" 双点")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("experiment\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 experiment 分支中而不在 master 分支中的提交")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log origin/master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("HEAD\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在你当前分支中而不在远程 `origin`中的提交")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log origin/master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认右侧为 `HEAD`")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"多点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多点"}},[s._v("#")]),s._v(" 多点")]),s._v(" "),a("p",[s._v("Git 允许你在任意引用前加上"),a("code",[s._v("^")]),s._v("字符或者"),a("code",[s._v("--not")]),s._v("来指明你不希望提交被包含其中的分支。 因此下列三个命令是等价的：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log refA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("refB\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log ^refA refB\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log refB "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--not")]),s._v(" refA\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"三点-差集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三点-差集"}},[s._v("#")]),s._v(" 三点（差集）")]),s._v(" "),a("p",[s._v("选择出被两个引用"),a("strong",[s._v("之一")]),s._v("包含但又不被两者同时包含的提交。")]),s._v(" "),a("p",[a("code",[s._v("log")]),s._v("命令的一个常用参数是"),a("code",[s._v("--left-right")]),s._v("，它会显示每个提交到底处于哪一侧的分支。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --left-right master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".experiment\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" F\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" E\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" D\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" C\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"squash-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squash-commit"}},[s._v("#")]),s._v(" squash commit")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("U"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前分支相对远程有n个commit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" HEAD~n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit从旧的开始显示,与git log相反.选取某一个commit为squash时,上方必须有pick的commit")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"push新分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push新分支"}},[s._v("#")]),s._v(" push新分支")]),s._v(" "),a("p",[s._v("假如新创建了一个分支feature,默认远程仓库名称是origin,push前需要设置关联远程分支:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --set-upstream origin feature\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果希望这一步省略,自动执行,可以进行git配置:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--bool")]),s._v(" push.autoSetupRemote "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"删除分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[s._v("#")]),s._v(" 删除分支")]),s._v(" "),a("p",[s._v("删除本地分支")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" localBranchName\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("删除远程分支")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delete")]),s._v(" remoteBranchName\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);